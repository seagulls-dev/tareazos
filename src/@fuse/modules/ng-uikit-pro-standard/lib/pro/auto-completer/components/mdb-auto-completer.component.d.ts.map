{"version":3,"file":"mdb-auto-completer.component.d.ts","sources":["C:/repos/Handyman/src/@fuse/modules/ng-uikit-pro-standard/lib/pro/auto-completer/components/mdb-auto-completer.component.d.ts"],"sourcesContent":["import { AfterContentInit, ElementRef, EventEmitter, Renderer2, QueryList, OnDestroy } from '@angular/core';\nimport { MdbOptionComponent } from './mdb-option.component';\nimport { ISelectedOption } from '../interfaces/selected-option.interface';\nimport { Observable } from 'rxjs';\nexport declare class MdbAutoCompleterComponent implements AfterContentInit, OnDestroy {\n    private renderer;\n    private el;\n    textNoResults: string;\n    clearButton: boolean;\n    clearButtonTabIndex: number;\n    appendToBody: boolean;\n    disabled: boolean;\n    visibleOptions: number;\n    _visibleOptions: number;\n    optionHeight: any;\n    _optionHeight: number;\n    dropdownHeight: number;\n    _dropdownHeight: number;\n    displayValue: ((value: any) => string) | null;\n    select: EventEmitter<{\n        text: string;\n        element: any;\n    }>;\n    selected: EventEmitter<{\n        text: string;\n        element: any;\n    }>;\n    optionList: Array<any>;\n    mdbOptions: QueryList<MdbOptionComponent>;\n    dropdown: ElementRef;\n    noResultsEl: ElementRef;\n    private _destroy;\n    private utils;\n    origin: ElementRef;\n    parameters: {\n        left: number;\n        top: number;\n        width: number;\n        bottom: number;\n        inputHeight: number;\n    };\n    private _isDropdownOpen;\n    private _allItems;\n    private _isOpen;\n    private _selectedItemIndex;\n    private _selectedItem;\n    private _selectedItemChanged;\n    private _isBrowser;\n    constructor(renderer: Renderer2, el: ElementRef, platformId: string);\n    private _listenToOptionClick;\n    private _handleOptionClick;\n    setSelectedItem(item: ISelectedOption): void;\n    getSelectedItem(): ISelectedOption;\n    selectedItemChanged(): Observable<any>;\n    isOpen(): boolean;\n    _calculatePosition(): void;\n    private _calculateAppendPosition;\n    show(): void;\n    hide(): void;\n    isDropdownOpen(): Observable<any>;\n    removeHighlight(index: number): void;\n    highlightRow(index: number): void;\n    navigateUsingKeyboard(event: any): void;\n    moveHighlightedIntoView(type: string): void;\n    updatePosition(parameters: {\n        left: number;\n        top: number;\n        width: number;\n        bottom: number;\n    }): void;\n    appendDropdown(): void;\n    setSingleOptionHeight(): void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;"}