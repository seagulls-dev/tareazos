{"version":3,"file":"datepicker.component.d.ts","sources":["C:/repos/Handyman/src/@fuse/modules/ng-uikit-pro-standard/lib/pro/date-picker/datepicker.component.d.ts"],"sourcesContent":["import { IMyLocales } from './interfaces/locale.interface';\nimport { EventEmitter, OnChanges, SimpleChanges, ElementRef, Renderer2, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { IMyDate, IMyMonth, IMyWeek, IMyInputFieldChanged, IMyCalendarViewChanged, IMyInputFocusBlur, IMyOptions } from './interfaces/index';\nimport { LocaleService } from './services/datepickerLocale.service';\nimport { UtilService } from './services/datepickerUtil.service';\nexport declare const MYDP_VALUE_ACCESSOR: any;\nexport declare class MDBDatePickerComponent implements OnChanges, ControlValueAccessor, AfterViewInit {\n    elem: ElementRef;\n    private renderer;\n    private localeService;\n    private utilService;\n    private cdRef;\n    private _globalOptions;\n    private document;\n    tabIndex: any;\n    options: any;\n    locale: string;\n    defaultMonth: string;\n    selDate: string;\n    label: string;\n    placeholder: string;\n    selector: number;\n    disabled: boolean;\n    openOnFocus: boolean;\n    outlineInput: boolean;\n    inline: boolean;\n    inlineIcon: string;\n    id: string;\n    private _id;\n    dateChanged: EventEmitter<any>;\n    inputFieldChanged: EventEmitter<IMyInputFieldChanged>;\n    calendarViewChanged: EventEmitter<IMyCalendarViewChanged>;\n    calendarToggle: EventEmitter<number>;\n    inputFocusBlur: EventEmitter<IMyInputFocusBlur>;\n    closeButtonClicked: EventEmitter<MDBDatePickerComponent>;\n    clearButtonClicked: EventEmitter<MDBDatePickerComponent>;\n    todayButtonClicked: EventEmitter<MDBDatePickerComponent>;\n    divFocus: any;\n    inlineInput: any;\n    inlineIconToggle: any;\n    pickerFrame: ElementRef;\n    isDateSelected: boolean;\n    labelActive: boolean;\n    showSelector: boolean;\n    visibleMonth: IMyMonth;\n    selectedMonth: IMyMonth;\n    selectedDate: IMyDate;\n    weekDays: Array<string>;\n    dates: Array<IMyWeek>;\n    selectionDayTxt: string;\n    invalidDate: boolean;\n    disableTodayBtn: boolean;\n    dayIdx: number;\n    weekDayOpts: Array<string>;\n    editMonth: boolean;\n    invalidMonth: boolean;\n    editYear: boolean;\n    invalidYear: boolean;\n    prevMonthDisabled: boolean;\n    nextMonthDisabled: boolean;\n    prevYearDisabled: boolean;\n    nextYearDisabled: boolean;\n    prevMonthId: number;\n    currMonthId: number;\n    nextMonthId: number;\n    private _uid;\n    isOpen: boolean;\n    isDisabled: boolean;\n    tmp: IMyDate;\n    opts: any;\n    months: any;\n    years: any;\n    elementNumber: any;\n    firstTimeOpenedModal: boolean;\n    modalHeightBefore: any;\n    isMobile: any;\n    isBrowser: any;\n    documentClickFun: Function;\n    constructor(elem: ElementRef, renderer: Renderer2, localeService: LocaleService, utilService: UtilService, cdRef: ChangeDetectorRef, _globalOptions: IMyOptions, document: any, platformId: string);\n    ngAfterViewInit(): void;\n    ChangeZIndex(): void;\n    onChangeCb: (_: any) => void;\n    onTouchedCb: () => void;\n    setDisabledState(isDisabled: boolean): void;\n    setDisabled(isDisabled: boolean): void;\n    removeInlineStyle(): void;\n    setLocaleOptions(): void;\n    addLocale(locale: IMyLocales): void;\n    setOptions(): void;\n    resetMonthYearEdit(): void;\n    onUserDateInput(value: string): void;\n    onFocusInput(event: any): void;\n    onBlurInput(event: any): void;\n    onUserMonthInput(value: string): void;\n    onUserYearInput(value: string): void;\n    isTodayDisabled(): void;\n    parseOptions(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    hideKeyboard(): void;\n    removeBtnClicked(): void;\n    closeBtnClicked(): void;\n    openBtnClicked(): void;\n    setVisibleMonth(): void;\n    monthList(): void;\n    yearsList(): void;\n    prevMonth(event?: any): void;\n    nextMonth(event?: any): void;\n    prevYear(): void;\n    nextYear(): void;\n    todayClicked(): void;\n    cellClicked(cell: any): void;\n    cellKeyDown(event: any, cell: any): void;\n    clearDate(): void;\n    selectDate(date: IMyDate): void;\n    updateDateValue(date: IMyDate, clear: boolean): void;\n    getDateModel(date: IMyDate): any;\n    preZero(val: string): string;\n    formatDate(val: any): string;\n    monthText(m: number): string;\n    weekText(m: string): string;\n    getMonthShort(m: number): string;\n    getMonthFull(m: number): string;\n    monthStartIdx(y: number, m: number): number;\n    daysInMonth(m: number, y: number): number;\n    daysInPrevMonth(m: number, y: number): number;\n    isCurrDay(d: number, m: number, y: number, cmo: number, today: IMyDate): boolean;\n    getToday(): IMyDate;\n    getTimeInMilliseconds(date: IMyDate): number;\n    getWeekday(date: IMyDate): string;\n    getDate(year: number, month: number, day: number): Date;\n    sundayIdx(): number;\n    generateCalendar(m: number, y: number, notifyChange: boolean): void;\n    parseSelectedDate(selDate: any): IMyDate;\n    parseSelectedMonth(ms: string): IMyMonth;\n    setHeaderBtnDisabledState(m: number, y: number): void;\n    checkActive(): boolean;\n    toggleInlineDatePicker(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;"}