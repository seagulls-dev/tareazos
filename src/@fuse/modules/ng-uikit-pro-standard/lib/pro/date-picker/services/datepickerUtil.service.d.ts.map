{"version":3,"file":"datepickerUtil.service.d.ts","sources":["C:/repos/Handyman/src/@fuse/modules/ng-uikit-pro-standard/lib/pro/date-picker/services/datepickerUtil.service.d.ts"],"sourcesContent":["import { IMyDate } from '../interfaces/date.interface';\nimport { IMyDateRange } from '../interfaces/dateRange.interface';\nimport { IMyMonth } from '../interfaces/month.interface';\nimport { IMyMonthLabels } from '../interfaces/monthLabels.interface';\nimport { IMyMarkedDates } from '../interfaces/markedDates.interface';\nimport { IMyMarkedDate } from '../interfaces/markedDate.interface';\nimport { IMyDateFormat } from '../interfaces/my-date-format.interface';\nexport declare class UtilService {\n    isDateValid(dateStr: string, dateFormat: string, minYear: number, maxYear: number, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableDays: Array<IMyDate | number>, disableDateRanges: Array<IMyDateRange>, monthLabels: IMyMonthLabels, enableDays: Array<IMyDate | number>): IMyDate;\n    getDateValue(dateStr: string, dateFormat: string, delimeters: Array<string>): Array<IMyDateFormat>;\n    getMonthNumberByMonthName(df: IMyDateFormat, monthLabels: IMyMonthLabels): number;\n    getNumberByValue(df: IMyDateFormat): number;\n    getDateFormatSeparator(dateFormat: string): string;\n    getDateFormatDelimeters(dateFormat: string): Array<string> | any;\n    isMonthLabelValid(monthLabel: string, monthLabels: IMyMonthLabels): number;\n    isYearLabelValid(yearLabel: number, minYear: number, maxYear: number): number;\n    parseDatePartNumber(dateFormat: string, dateString: string, datePart: string): number;\n    parseDatePartMonthName(dateFormat: string, dateString: string, datePart: string, monthLabels: IMyMonthLabels): number;\n    getDatePartIndex(dateFormat: string, datePart: string): number;\n    parseDefaultMonth(monthString: string | any): IMyMonth;\n    isDisabledDay(date: IMyDate, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableDays: Array<IMyDate | number>, disableDateRanges: Array<IMyDateRange>, enableDays: Array<IMyDate | number>): boolean;\n    isMarkedDate(date: IMyDate, markedDates: Array<IMyMarkedDates>, markWeekends: IMyMarkedDate): IMyMarkedDate;\n    getWeekNumber(date: IMyDate): number;\n    isMonthDisabledByDisableUntil(date: IMyDate, disableUntil: IMyDate): boolean;\n    isMonthDisabledByDisableSince(date: IMyDate, disableSince: IMyDate): boolean;\n    isInitializedDate(date: IMyDate): boolean;\n    getTimeInMilliseconds(date: IMyDate): number;\n    getDayNumber(date: IMyDate): number;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;AAqBA;"}