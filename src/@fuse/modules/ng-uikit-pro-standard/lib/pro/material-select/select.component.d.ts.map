{"version":3,"file":"select.component.d.ts","sources":["C:/repos/Handyman/src/@fuse/modules/ng-uikit-pro-standard/lib/pro/material-select/select.component.d.ts"],"sourcesContent":["import { OnChanges, OnInit, EventEmitter, ExistingProvider, ElementRef, Renderer2, AfterViewInit, SimpleChanges, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { SelectDropdownComponent } from './select-dropdown.component';\nimport { IOption } from './option-interface';\nimport { Option } from './option';\nimport { OptionList } from './option-list';\nexport declare const SELECT_VALUE_ACCESSOR: ExistingProvider;\nexport declare class SelectComponent implements ControlValueAccessor, OnChanges, OnInit, AfterViewInit {\n    el: ElementRef;\n    renderer: Renderer2;\n    private document;\n    private cdRef;\n    options: Array<IOption>;\n    customClass: string;\n    allowClear: boolean;\n    disabled: boolean;\n    highlightColor: string;\n    highlightTextColor: string;\n    highlightFirst: boolean;\n    multiple: boolean;\n    noFilter: number;\n    notFoundMsg: string;\n    placeholder: string;\n    filterPlaceholder: string;\n    label: string;\n    filterEnabled: boolean;\n    filterAutocomplete: boolean;\n    visibleOptions: number;\n    optionHeight: number;\n    tabindex: number;\n    enableSelectAll: boolean;\n    appendToBody: boolean;\n    selectAllLabel: string;\n    outline: boolean;\n    required: boolean;\n    private _required;\n    compareWith: (o1: any, o2: any) => boolean;\n    opened: EventEmitter<any>;\n    closed: EventEmitter<any>;\n    selected: EventEmitter<IOption>;\n    deselected: EventEmitter<IOption | IOption[]>;\n    noOptionsFound: EventEmitter<string>;\n    changed: EventEmitter<{}>;\n    selectionSpan: ElementRef;\n    dropdown: SelectDropdownComponent;\n    filterInput: ElementRef;\n    clearButton: ElementRef;\n    singleContainer: ElementRef;\n    multipleContainer: ElementRef;\n    _value: Array<any>;\n    optionList: OptionList;\n    optionsLength: number;\n    visibleOptionsDefault: number;\n    hasSelected: boolean;\n    isBrowser: boolean;\n    canOpenOnFocus: boolean;\n    hasFocus: boolean;\n    isOpen: boolean;\n    isBelow: boolean;\n    filterInputWidth: number;\n    isDisabled: boolean;\n    placeholderView: string;\n    labelActive: boolean;\n    labelRef: HTMLElement;\n    prefixRef: HTMLElement;\n    labelRefActive: boolean;\n    dropdownAnimationDone: boolean;\n    clearClicked: boolean;\n    selectContainerClicked: boolean;\n    filterHeight: number;\n    dropdownHeight: number;\n    dropdownMaxHeight: number;\n    OUTLINE_DROPDOWN_BOTTOM_OFFSET: number;\n    OUTLINE_DROPDOWN_TOP_OFFSET: number;\n    width: number;\n    top: number;\n    left: number;\n    documentClickFun: Function;\n    itemsBefore: Array<any>;\n    readonly focused: boolean;\n    private _focused;\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    private _compareWith;\n    constructor(el: ElementRef, renderer: Renderer2, document: any, platformId: string, cdRef: ChangeDetectorRef);\n    ngOnInit(): void;\n    private _getLabelRef;\n    private _getPrefixRef;\n    updateFilterHeight(): void;\n    updateDropdownHeight(): void;\n    onDropdownAnimationDone(): void;\n    onDropdownAnimationStart(): void;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    isChild(elemnt: any): boolean;\n    onWindowResize(): void;\n    onSelectContainerClick(event: any): false | undefined;\n    onSelectContainerFocus(): void;\n    onSelectContainerBlur(): void;\n    onSelectContainerKeydown(event: any): void;\n    onDropdownOptionClicked(option: Option): void;\n    onDropdownClose(focus: any): void;\n    onSingleFilterClick(): void;\n    onSingleFilterInput(term: string): void;\n    onSingleFilterKeydown(event: any): void;\n    onMultipleFilterInput(event: any): void;\n    onMultipleFilterKeydown(event: any): void;\n    onClearSelectionClick(event: any): void;\n    onDeselectOptionClick(option: Option): void;\n    /** API. **/\n    open(): void;\n    close(): void;\n    value: any | any[];\n    private _setSelection;\n    private _selectByValue;\n    clear(): void;\n    select(value: string): void;\n    /** ControlValueAccessor interface methods. **/\n    writeValue(value: any): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n    valueChanged(): void;\n    updateState(): void;\n    /** Initialization. **/\n    updateOptionsList(options: Array<IOption>): void;\n    updateLabelState(): void;\n    updateLabelRefState(): void;\n    /** Dropdown. **/\n    toggleDropdown(): void;\n    openDropdown(): void;\n    closeDropdown(focus?: boolean): void;\n    /** Select. **/\n    selectOption(option: Option): void;\n    deselectOption(option: Option): void;\n    clearSelection(): void;\n    toggleSelectOption(option: Option): void;\n    selectHighlightedOption(): void;\n    deselectLast(): void;\n    onSelectAll(isSelected: boolean): void;\n    /** Filter. **/\n    clearFilterInput(): void;\n    setMultipleFilterInput(value: string): void;\n    handleSelectContainerKeydown(event: any): void;\n    handleMultipleFilterKeydown(event: any): void;\n    handleSingleFilterKeydown(event: any): void;\n    /** View. **/\n    focus(): void;\n    blur(): void;\n    updateWidth(): void;\n    updatePosition(): void;\n    private _updateAppendedPosition;\n    private _appendDropdown;\n    updateFilterWidth(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;"}