{"version":3,"file":"mdb-range.component.d.ts","sources":["C:/repos/Handyman/src/@fuse/modules/ng-uikit-pro-standard/lib/pro/range/mdb-range.component.d.ts"],"sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\nimport { ElementRef, Renderer2, AfterViewInit, EventEmitter, ChangeDetectorRef } from '@angular/core';\nexport declare const RANGE_VALUE_ACCESOR: any;\nexport declare class MdbRangeInputComponent implements ControlValueAccessor, AfterViewInit {\n    private renderer;\n    private cdRef;\n    input: ElementRef;\n    rangeCloud: ElementRef;\n    rangeField: ElementRef;\n    id: string;\n    required: boolean;\n    name: string;\n    value: string;\n    disabled: boolean;\n    min: number;\n    max: number;\n    step: number;\n    default: boolean;\n    defaultRangeCounterClass: string;\n    rangeValueChange: EventEmitter<any>;\n    range: any;\n    stepLength: number;\n    steps: number;\n    cloudRange: number;\n    visibility: boolean;\n    onchange(event: any): void;\n    oninput(event: any): void;\n    onclick(): void;\n    onTouchStart(): void;\n    onmouseleave(): void;\n    constructor(renderer: Renderer2, cdRef: ChangeDetectorRef);\n    focusRangeInput(): void;\n    blurRangeInput(): void;\n    coverage(event: any, value?: any): string | undefined;\n    checkIfSafari(): boolean;\n    ngAfterViewInit(): void;\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    writeValue(value: any): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n}\n"],"names":[],"mappings":"AAAA;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;"}