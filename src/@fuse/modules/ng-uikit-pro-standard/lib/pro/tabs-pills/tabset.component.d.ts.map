{"version":3,"file":"tabset.component.d.ts","sources":["C:/repos/Handyman/src/@fuse/modules/ng-uikit-pro-standard/lib/pro/tabs-pills/tabset.component.d.ts"],"sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\nimport { WavesDirective } from '../../free/waves/waves-effect.directive';\nexport declare class TabsetComponent implements OnDestroy, OnInit, AfterViewInit {\n    ripple: WavesDirective;\n    private cdRef;\n    private renderer;\n    tabs: TabDirective[];\n    classMap: any;\n    protected isDestroyed: boolean;\n    protected _vertical: boolean;\n    protected _justified: boolean;\n    protected _type: string;\n    listGetClass: String;\n    tabsGetClass: String;\n    isBrowser: any;\n    clazz: boolean;\n    disableWaves: boolean;\n    buttonClass: String;\n    contentClass: String;\n    tabsButtonsClass: string;\n    tabsContentClass: string;\n    itemsList: ElementRef;\n    tabEl: any;\n    showBsTab: EventEmitter<any>;\n    shownBsTab: EventEmitter<any>;\n    hideBsTab: EventEmitter<any>;\n    hiddenBsTab: EventEmitter<any>;\n    getActiveTab: EventEmitter<any>;\n    /** if true tabs will be placed vertically */\n    vertical: boolean;\n    setActiveTab(index: number): void;\n    /** if true tabs fill the container and have a consistent width */\n    justified: boolean;\n    /** navigation context class: 'tabs' or 'pills' */\n    type: string;\n    constructor(platformId: string, config: TabsetConfig, ripple: WavesDirective, cdRef: ChangeDetectorRef, renderer: Renderer2);\n    click(event: any, index: any): void;\n    ngOnDestroy(): void;\n    getActive(): any;\n    addTab(tab: TabDirective): void;\n    removeTab(tab: TabDirective): void;\n    protected getClosestTabIndex(index: number): number;\n    protected hasAvailableTabs(index: number): boolean;\n    protected setClassMap(): void;\n    listGet(): void;\n    tabsGet(): void;\n    getActiveElement(): any;\n    showActiveIndex(): void;\n    private getFirstActiveTabIndex;\n    private removeActiveTabs;\n    initActiveTab(): void;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;"}